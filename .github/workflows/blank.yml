name: Python PR CI

on:
  push:
    paths:
      - '**/*.py'
  pull_request:
    paths:
      - '**/*.py'
    types: [opened, reopened, synchronize, edited, ready_for_review]

permissions:
  contents: read
  pull-requests: write

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List all files (debug)
        run: ls -R

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      - name: Install dependencies explicitly
        run: |
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            echo "requirements-dev.txt not found!"
            exit 1
          fi

      - name: Run black check
        run: black --check .

      - name: Run flake8 lint
        run: flake8 .

      - name: Run pytest with coverage
        run: pytest --cov=. --cov-report=xml --cov-report=term

      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml

  coverage-comment:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: .

      - name: Compute coverage %
        id: coverage
        run: |
          python - <<'EOF' > coverage.txt
          import xml.etree.ElementTree as ET
          tree = ET.parse("coverage.xml")
          root = tree.getroot()
          line_rate = float(root.attrib.get("line-rate", 0))
          pct = round(line_rate * 100, 2)
          print(pct)
          EOF
          echo "pct=$(cat coverage.txt)" >> $GITHUB_OUTPUT

      - name: Find existing coverage comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: '## Coverage Report'

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            ## Coverage Report
            âœ… Coverage: **${{ steps.coverage.outputs.pct }}%**

            _This comment auto-updates on each push._
